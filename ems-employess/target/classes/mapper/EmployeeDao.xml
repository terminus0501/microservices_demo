<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylc.emsemployess.dao.EmployeeDao">

    <resultMap type="com.ylc.Employee" id="EmployeeMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="salary" column="salary" jdbcType="NUMERIC"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询指定行数据-->
    <select id="queryAll" resultMap="EmployeeMap">
        select id,
               name,
               birthday,
               salary,
               department_id
        from employee
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="EmployeeMap">
        select id,
               name,
               birthday,
               salary,
               department_id
        from employee
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmployeeMap">
        select
        id, name, birthday, salary, department_id
        from employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="salary != null">
                and salary = #{salary}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from employee
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="salary != null">
                and salary = #{salary}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, birthday, salary, department_id)
        values (#{name}, #{birthday}, #{salary}, #{departmentId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, birthday, salary, department_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.birthday}, #{entity.salary}, #{entity.departmentId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, birthday, salary, department_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.birthday}, #{entity.salary}, #{entity.departmentId})
        </foreach>
        on duplicate key update
        name = values(name),
        birthday = values(birthday),
        salary = values(salary),
        department_id = values(department_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update employee
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from employee
        where id = #{id}
    </delete>

</mapper>

